<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAGHgAAJj4ABGQAAAfkAJCAAAAQkAAAMJ/g=
</value>
  </data>
</root>